rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthor(bookId) {
      return request.auth != null && request.auth.uid in get(/databases/$(database)/documents/books/$(bookId)).data.authors;
    }

		function isPublic(bookId) {
      return get(/databases/$(database)/documents/books/$(bookId)).data.public == true;
    }
    
    // Protection des utilisateurs
    match /users/{userId} {
      allow read;
      allow write, delete: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/protected/{document=**} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/books/{document=**} {
    	allow read;
      allow write, delete: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/list/{document=**} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/notifs/{document=**} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/follows/{document=**} {
      allow read;
      allow write, delete: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{followUserId}/followers/{userId} {
      allow read;
      allow write, delete: if request.auth != null && request.auth.uid == userId;
    }
    // Protection des livres
    match /books/{bookId} {
      allow read;
      allow write;
      allow delete, create: if isAuthor(bookId);
    }
    
    match /books/{bookId}/chats/{document=**} {
      allow read;
      allow write, delete, create: if isAuthor(bookId);
    }
    
    match /books/{bookId}/medias/{document=**} {
      allow read;
      allow write, delete, create: if isAuthor(bookId);
    }
    
    match /books/{bookId}/actors/{document=**} {
      allow read;
      allow write, delete, create: if isAuthor(bookId);
    }
    
    match /books/{bookId}/comments/{commentId} {
    	allow read;
    	allow write, create: if request.auth.uid == commentId;
      allow delete: if isAuthor(bookId);
    }
  }
}